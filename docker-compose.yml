version: '3.9'

services:
  app:
    container_name: app
    build:
      context: ./app
      dockerfile: images/Dockerfile
      args:
        - FLASK_ENV=${FLASK_ENV}
        - FLASK_APP=${FLASK_APP}
    restart: always
    env_file:
      - app/src/.env
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - app-data:/app
    entrypoint: [
      "gunicorn", "-w", "4", "--bind", "0.0.0.0:5000", "manage:application", "-k", "gevent", "--timeout", "300",
      "--worker-connections", "1000", "--max-requests", "1000000", "--limit-request-line", "8190",
      "--access-logfile", "'-'", "--error-logfile", "'-'"
    ]

  postgres:
    container_name: postgres
    image: postgres:14.4-alpine
    restart: always
    env_file:
      - app/src/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  redis:
    container_name: redis
    image: redis:7.0.4-alpine
    ports:
      - "6379:6379"

  nginx:
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - app/src/.env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-data:/var/log/nginx
    depends_on:
      - app


volumes:
  app-data:
    name: app-data
  postgres-data:
    name: postgres-data
  redis-data:
    name: redis-data
  nginx-data:
    name: nginx-data