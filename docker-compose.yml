version: '3.9'

services:
  app:
    container_name: app
    build:
      context: ./app
      dockerfile: images/Dockerfile
    restart: always
    env_file:
      - app/.env.prod
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - app-data:/app
      - static-volume:/app/src/static/
    entrypoint: [ "gunicorn", "-c", "/config/gunicorn.py", "manage:application" ]

  postgres:
    container_name: postgres
    image: postgres:14.4-alpine
    restart: always
    env_file:
      - app/.env.prod
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  redis:
    container_name: redis
    image: redis:7.0.4-alpine
    restart: always
    ports:
      - "6379:6379"

  nginx:
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - app/.env.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-data:/var/log/nginx
      - static-volume:/app/src/static/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - app

  certbot:
    container_name: certbot
    image: certbot/certbot
    depends_on:
      - nginx
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/app --email nikoloz2005@gmail.com -agree-tos --no-eff-email -d sawvavi.tk


volumes:
  app-data:
    name: app-data
  static-volume:
    name: static-files
  postgres-data:
    name: postgres-data
  nginx-data:
    name: nginx-data